name: Build, run tests and lint
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  format-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          rustup toolchain install nightly
          rustup default nightly
          rustup component add rustfmt
      - run: cargo fmt --all -- --check

  outdated-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cargo outdated --exit-code 1

  deny-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          cargo install cargo-deny || true
      - run: cargo deny --log-level warn --all-features check advisories

  build-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: cargo
          shared-key: build
      - run: cargo build --all-features --all-targets --release --verbose

  clippy-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: cargo
          shared-key: check
      - run: cargo clippy --all-features --all-targets --tests -- -Dwarnings -Aclippy::blocks-in-conditions

  test-rust:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      TEST_DB: postgres://postgres:postgres@localhost:5432/postgres
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: cargo
          shared-key: test
      - run: cargo test --all-features --all-targets --verbose

  udeps-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: cargo
          shared-key: udeps
      - run: |
          cargo install cargo-udeps || true
          rustup toolchain install nightly
          rustup default nightly
      - run: cargo udeps --all-features --all-targets

  test-go:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - working-directory: auth-digid
        run: go test -v ./... -ldflags "-X github.com/verder-helpen/verder-helpen/auth-digid.testdb=postgres://postgres:postgres@localhost:5432/postgres"

  format-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - working-directory: auth-digid
        run: gofmt -d .

  build-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - working-directory: auth-digid
        run: go build -v ./...

  vet-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - working-directory: auth-digid
        run: go vet -v ./...
